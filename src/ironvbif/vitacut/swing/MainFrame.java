/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ironvbif.vitacut.swing;

import ironvbif.vitacut.DirectoryCache;
import ironvbif.vitacut.VitaCutApplication;
import ironvbif.vitacut.swing.imagechooser.ImageChooser;
import java.awt.Dimension;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Администратор
 */
public class MainFrame extends javax.swing.JFrame {

    private final JFileChooser ofc = new ImageChooser();
    private final JFileChooser sfc = new JFileChooser();
    private final DirectoryCache dc = DirectoryCache.getInstance();
    //private final ImageCutter imageCutter = new ImageCutter();
    
    /**
     * Creates new form NewJFrame
     */
    public MainFrame() {
        initComponents();
        imageCutter.setDimensionSize(new Dimension(960, 544));
        imageCutter.setSliders(verSlider1, verSlider2, horSlider1, horSlider2);
        this.setTitle(String.format("VitaCut - Wallpaper cut tool for PSVita. Version %s", VitaCutApplication.version));
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        saveButton = new javax.swing.JButton();
        previewButton = new javax.swing.JButton();
        openButton = new javax.swing.JButton();
        verSlider1 = new javax.swing.JSlider();
        horSlider1 = new javax.swing.JSlider();
        horSlider2 = new javax.swing.JSlider();
        verSlider2 = new javax.swing.JSlider();
        winCount = new javax.swing.JSpinner();
        imageCutter = new ironvbif.vitacut.swing.ImageCutter();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        saveButton.setText("Save as...");
        saveButton.setEnabled(false);
        saveButton.setName("saveButton");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        previewButton.setText("Preview");
        previewButton.setEnabled(false);
        previewButton.setName("previewButton");
        previewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                previewButtonActionPerformed(evt);
            }
        });

        openButton.setText("Open");
        openButton.setName("openButton");
        openButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                openButtonActionPerformed(evt);
            }
        });

        verSlider1.setEnabled(false);

        horSlider1.setOrientation(javax.swing.JSlider.VERTICAL);
        horSlider1.setEnabled(false);

        horSlider2.setOrientation(javax.swing.JSlider.VERTICAL);
        horSlider2.setEnabled(false);

        verSlider2.setEnabled(false);

        winCount.setEnabled(false);
        winCount.setValue(1);
        winCount.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                winCountStateChanged(evt);
            }
        });

        javax.swing.GroupLayout imageCutterLayout = new javax.swing.GroupLayout(imageCutter);
        imageCutter.setLayout(imageCutterLayout);
        imageCutterLayout.setHorizontalGroup(
            imageCutterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        imageCutterLayout.setVerticalGroup(
            imageCutterLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        jLabel1.setText("Screen count");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(openButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(previewButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(saveButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(winCount, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(horSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(imageCutter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(horSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(verSlider1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 616, Short.MAX_VALUE)
                    .addComponent(verSlider2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(31, 31, 31))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(verSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(horSlider1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(horSlider2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 364, Short.MAX_VALUE)
                    .addComponent(imageCutter, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(verSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(openButton)
                    .addComponent(previewButton)
                    .addComponent(saveButton)
                    .addComponent(winCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(11, 11, 11))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        
    }//GEN-LAST:event_formWindowOpened

    private void openButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_openButtonActionPerformed
        // TODO add your handling code here:
        ofc.setCurrentDirectory(new File(dc.getOpenDir()));
        int returnVal = ofc.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = ofc.getSelectedFile();
            try {
                dc.setOpenDir(ofc.getCurrentDirectory().getAbsolutePath());
                //This is where a real application would open the file.
                Image img = ImageIO.read(file);
                if (img == null)
                {
                    System.out.println("panic");
                    JOptionPane.showMessageDialog(this, "Can't open file");
                    return;
                }
                imageCutter.setWindowCount((int)winCount.getValue());
                imageCutter.setImage(img);
                
                previewButton.setEnabled(true);
                saveButton.setEnabled(true);
                horSlider1.setEnabled(true);
                horSlider2.setEnabled(true);
                verSlider1.setEnabled(true);
                verSlider2.setEnabled(true);
                winCount.setEnabled(true);
                
                
                
                //System.out.println(imageCutter.getSize());
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                System.out.println(ex);
            }
        } 
    }//GEN-LAST:event_openButtonActionPerformed

    private void winCountStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_winCountStateChanged
        // TODO add your handling code here:
        imageCutter.setWindowCount((int)winCount.getValue());
        
    }//GEN-LAST:event_winCountStateChanged

    private void previewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_previewButtonActionPerformed
        // TODO add your handling code here:
        PreviewFrame fr = new PreviewFrame();
        fr.setImages(imageCutter.cutImage());
        fr.setVisible(true);
    }//GEN-LAST:event_previewButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        sfc.setCurrentDirectory(new File(dc.getSaveDir()));
        int retVal = sfc.showSaveDialog(this);
        if (retVal == JFileChooser.APPROVE_OPTION) {
            try {
                dc.setSaveDir(sfc.getCurrentDirectory().getAbsolutePath());
                BufferedImage[] imgs = imageCutter.cutImage();
                String name = sfc.getSelectedFile().getAbsolutePath();
                int ind = name.lastIndexOf('.');
                String pathAndName;
                if (ind > 0)
                    pathAndName = name.substring(0, ind);
                else pathAndName = name;
                for (int i = 0; i < imgs.length; ++i)
                    ImageIO.write(imgs[i], "JPEG", new File(String.format("%s_%d%s", pathAndName, i, ".jpg")));
            } catch (IOException ex) {
                Logger.getLogger(MainFrame.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Files NOT saved");
            }
            JOptionPane.showMessageDialog(this, "Files saved");
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new MainFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSlider horSlider1;
    private javax.swing.JSlider horSlider2;
    private ironvbif.vitacut.swing.ImageCutter imageCutter;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JButton openButton;
    private javax.swing.JButton previewButton;
    private javax.swing.JButton saveButton;
    private javax.swing.JSlider verSlider1;
    private javax.swing.JSlider verSlider2;
    private javax.swing.JSpinner winCount;
    // End of variables declaration//GEN-END:variables
}
